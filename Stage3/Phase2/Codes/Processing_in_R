---
title: "R Notebook"
output:
  html_notebook: default
  pdf_document: default
---
#Load libraries
```{r}
library(tidyverse)
library(tidyr)
library(readr)
library(ggplot2)
```
#Load data
```{r}
cases <- read.csv('Cases_Cholera.csv')
deaths <- read.csv('Fatality_Cholera.csv')
fatality <- read.csv('Case-Fatality_Cholera.csv')
```
#Review data (structure, summary, NA
```{r}
#Data structure
str(cases)
str(deaths) #number of deaths needs to be changed from character to numeric
str(fatality) #case-fatality rate needs to be changed from character to numeric
#Data summary
summary(cases)
summary(deaths)
summary(fatality) #The three datasets (1949-2016)
                  #There is discrepancy in the number of entries (check for NA & empty cells)
#Check for unique values
unique_cases <- lapply(cases, unique) #161 countries, 68 years (1949-2016)
unique_deaths <- lapply(deaths, unique) #161 countries, 68 years (1949-2016)
unique_fatality <- lapply(fatality, unique) #160 countries (one missing), 68 years (1949-2016)
#Check for NA/missing values
sum(is.na(cases)) #None in cases
sum(is.na(deaths)) #2 NA in deaths
sum(is.na(fatality)) #None in fatality
```
#Data processing
```{r}
#Change column names (very long names)
cases <- cases %>%
  rename(Country = Countries..territories.and.areas, Number_cases =
           Number.of.reported.cases.of.cholera)

deaths <- deaths %>%
  rename(Country = Countries..territories.and.areas, Number_deaths =
           Number.of.reported.deaths.from.cholera)

fatality <- fatality %>%
  rename(Country = Countries..territories.and.areas, Case_fatality =
           Cholera.case.fatality.rate)

#Change no. of deaths & fatality rates to numeric
deaths$Number_deaths <- as.numeric(deaths$Number_deaths)
fatality$Case_fatality <- as.numeric(fatality$Case_fatality)

#Warning NAs introduced, so check for them
colSums(is.na(deaths)) #2 NAs in Number of deaths column
colSums(is.na(fatality)) #2 NAs in case-fatality column

#Check which cells are NA
subset(deaths, is.na(deaths$Number_deaths)) #Germany2016 & Iraq2016
subset(fatality, is.na(fatality$Case_fatality)) #Germany2016 & Iraq2016
#Check cases for these two countries in 2016 and deaths in other years
subset(cases, Country == 'Germany' | Country == 'Iraq')
subset(deaths, Country == 'Germany' | Country == 'Iraq') #Only one case in Germany2016 & v.low fatalities in other years... #No record for cases in Iraq2016 (convert NAs to 0)

#Replace NA in deaths and fatalities by "0"
deaths$Number_deaths[is.na(deaths$Number_deaths)] <- 0
fatality$Case_fatality[is.na(fatality$Case_fatality)] <- 0

#Recheck for NAs
sum(is.na(cases))
sum(is.na(deaths)) 
sum(is.na(fatality)) #Now, none is NA
```
#Merge the 3 files into one dataset
```{r}
joined_cholera <- cases %>%
  left_join(deaths, by = c("Country" = "Country", "Year" = "Year")) %>%
  left_join(fatality, by = c("Country" = "Country", "Year" = "Year"))

#Check for NAs after Join
colSums(is.na(joined_cholera))

#Check which cells are NA
subset(joined_cholera, is.na(joined_cholera$Number_deaths)) 
subset(joined_cholera, is.na(joined_cholera$Case_fatality)) #Some of the missing fatality entries are for outbreaks with large number of cases (so we need to be cautious when interpreting the results!)
#Converting NAs to Zero
joined_cholera$Number_deaths[is.na(joined_cholera$Number_deaths)] <- 0
joined_cholera$Case_fatality[is.na(joined_cholera$Case_fatality)] <- 0
#ReCheck for NAs
colSums(is.na(joined_cholera)) #Now, no NAs
```
#Data analysis for trends
```{r}
#Total cases by year
yearly_summary <- joined_cholera %>%
  group_by(Year) %>% summarise(
    Total_Cases = sum(Number_cases, na.rm = TRUE),
    Total_Deaths = sum(Number_deaths, na.rm = TRUE),
    Avg_Fatality_Rate = mean(Case_fatality, na.rm = TRUE))

#Visualize yearly summary
##Total cases over years
ggplot(yearly_summary, aes(x = Year, y = Total_Cases)) +
  geom_line(color = "blue") +
  labs(title = "Cholera Cases Over Time (1949-2016)", x = "Year", y = "Total Cases")
##Total deaths over years
ggplot(yearly_summary, aes(x = Year, y = Total_Deaths)) +
  geom_line(color = "red") +
  labs(title = "Cholera fatalities Over Time (1949-2016)", x = "Year", y = "Total Fatalities")
##Total Case-Fatality over years
ggplot(yearly_summary, aes(x = Year, y = Avg_Fatality_Rate)) +
  geom_line(color = "purple") +
  labs(title = "Average Case-Fatality Over years (1949-2016)", x = "Year", y = "Average Case-Fatality Rate")

#Total cases by country
country_summary <- joined_cholera %>%
  group_by(Country) %>% summarize(
    Total_Cases = sum(Number_cases, na.rm = T),
    Total_Deaths = sum(Number_deaths, na.rm = T),
    Avg_Fatality_Rate = mean(Case_fatality, na.rm = T)) %>%
  arrange(desc(Total_Cases))

#1- Bar plot of total cases for top 20 countryies
ggplot(country_summary, aes(x = reorder(Country, -Total_Cases), y = Total_Cases)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  coord_flip() +
  labs(title = "Total Cholera Cases by Country", x = "Country", y = "Total Cases")  #So many countries, the graph is crowded, so only plot the top 20
##Filter top 20 countries by total cases
top_20_countries <- country_summary %>%
  top_n(20, Total_Cases) %>%      # Get the top 20 countries
  arrange(desc(Total_Cases))      # Arrange by total cases in descending order

##Plot the data of the top 20
ggplot(top_20_countries, aes(x = reorder(Country, -Total_Cases), y = Total_Cases)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  coord_flip() +                   # Flip coordinates for better readability
  labs(title = "Top 20 Countries by Cholera Cases",
       x = "Country", y = "Total Cases") +
  scale_y_continuous(labels = scales::label_number(big.mark = ",")) +  #This to show full numbers instead of scientific notation like "5e+05"
  theme_minimal()

#2- Plot a map to visualize outbreaks geographically
##Merge our dataset data with the world map data
world_map <- getMap(resolution = "low")

##Match the country names from our dataset to the map's data
map_data <- joinCountryData2Map(country_summary,
                                   joinCode = "NAME",   #country names in world map
                                   nameJoinColumn = "Country")  #country names in our data

##Plot the map
mapCountryData(map_data, 
               nameColumnToPlot = "Total_Cases",   
               mapTitle = "Cholera Outbreaks by Country",
               colourPalette = "heat",               
               catMethod = "pretty")
```
